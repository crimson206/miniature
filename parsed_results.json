[
  {
    "title": "Setup local repository",
    "output": "{'local_path': '/home/crimson/miniature/my-scripts',\n 'message': 'Repository already exists at /home/crimson/miniature/my-scripts',\n 'success': True}"
  },
  {
    "title": "Load specific version",
    "output": "{'message': 'Successfully loaded package from local '\n            'https://github.com/crimson206/my-scripts/example_pkg',\n 'path': 'example_pkg',\n 'repo': 'https://github.com/crimson206/my-scripts',\n 'success': True,\n 'target_dir': './examples/downloaded/specific_version',\n 'version': 'example_pkg/0.1.1'}"
  },
  {
    "title": "Load latest version",
    "output": "{'message': 'Successfully loaded package from local '\n            'https://github.com/crimson206/my-scripts/example_pkg',\n 'path': 'example_pkg',\n 'repo': 'https://github.com/crimson206/my-scripts',\n 'success': True,\n 'target_dir': './examples/downloaded/latest_version',\n 'version': 'example_pkg/0.1.3'}"
  },
  {
    "title": "Load version range",
    "output": "{'message': 'Successfully loaded package from local '\n            'https://github.com/crimson206/my-scripts/example_pkg',\n 'path': 'example_pkg',\n 'repo': 'https://github.com/crimson206/my-scripts',\n 'success': True,\n 'target_dir': './examples/downloaded/version_range',\n 'version': 'example_pkg/0.1.3'}"
  },
  {
    "title": "Load from branch",
    "output": "{'message': 'Successfully loaded package from local '\n            'https://github.com/crimson206/my-scripts/example_pkg',\n 'path': 'example_pkg',\n 'repo': 'https://github.com/crimson206/my-scripts',\n 'success': True,\n 'target_dir': './examples/downloaded/from_branch',\n 'version': 'main'}"
  },
  {
    "title": "Load from config dictionary",
    "output": "{'message': 'Successfully loaded package from local '\n            'https://github.com/crimson206/my-scripts/example_pkg',\n 'path': 'example_pkg',\n 'repo': 'https://github.com/crimson206/my-scripts',\n 'success': True,\n 'target_dir': './examples/downloaded/from_config',\n 'version': 'example_pkg/0.1.1'}"
  },
  {
    "title": "Load with default path",
    "output": "{'message': 'Successfully loaded package from local '\n            'https://github.com/crimson206/my-scripts/example_pkg',\n 'path': 'example_pkg',\n 'repo': 'https://github.com/crimson206/my-scripts',\n 'success': True,\n 'target_dir': 'example_pkg',\n 'version': 'example_pkg/0.1.1'}"
  },
  {
    "title": "Load all from config file",
    "output": "---------------------------------------------------------------------------\nFileNotFoundError                         Traceback (most recent call last)\nCell In[9], line 8\n      2 \"\"\"Load all from config file\n      3 Load all packages from configuration file\n      4 \"\"\"\n      6 config_file = \"./examples/example_loader/load.pkg.json\"\n----> 8 result = load_pkgs_from_file(config_file)\n      9 pprint(result)\n\nFile /mnt/d/crimson/manager/cursor-workspace/miniature/src/miniature/load.py:203, in load_pkgs_from_file(config_file, package_names, clean, gitdbs_config)\n    201 # Load config file\n    202 if not os.path.exists(config_file):\n--> 203     raise FileNotFoundError(f\"Config file not found: {config_file}\")\n    205 with open(config_file, 'r') as f:\n    206     config_data = json.load(f)\n\nFileNotFoundError: Config file not found: ./examples/example_loader/load.pkg.json"
  },
  {
    "title": "Load specific from config file",
    "output": "Cell was canceled due to an error in a previous cell."
  },
  {
    "title": "Clean load",
    "output": "Cell was canceled due to an error in a previous cell."
  },
  {
    "title": "Check loaded files",
    "output": "Cell was canceled due to an error in a previous cell."
  }
]